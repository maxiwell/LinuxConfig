#!/bin/bash

PRIMARY=`xrandr | grep primary | cut -d' '  -f1`

# Get the external output display.
# I don't have multiple displays,
# but with a little adaption it can work
OUT=`xrandr \
    | awk '/^[0-9a-zA-Z]+ connected [^primary]/ {print echo $1}' \
    | head -n1`


function print_help() {
    echo -e "HDMI v0.1"
    echo -e "usage: hdmi [OPT]"
    echo -e "OPT:"
    echo -e "  clone, right, left, off, cinema"
}

function sound_hdmi() {
    pactl set-card-profile 0 output:hdmi-stereo
}

function screen_lock() {
    state=$1

    case $state in
        'disable')
            killall xscreensaver
            xset -dpms
            ;;
        'enable')
            xscreensaver &
            xset +dpms
            ;;
    esac
}

# MAIN
# --------

OPT=$1

# Set 'off' option as default
[[ -z $OPT ]] && OPT='off';

case $OPT in
    -h|--help)
        print_help
        ;;
    clone)
        xrandr --output $OUT --auto --same-as $PRIMARY --auto
        sound_hdmi
        screen_lock 'disable'
        ;;
    right)
        xrandr --output $OUT --auto --right-of $PRIMARY --auto
        sound_hdmi
        ;;
    left)
        xrandr --output $OUT --auto --left-of $PRIMARY --auto
        sound_hdmi
        ;;
    cinema)
        xrandr --output $PRIMARY --off --output $OUT --auto
        sound_hdmi
        screen_lock 'disable'
        ;;
    off)
        xrandr --output $PRIMARY --auto --output $OUT --off
        screen_lock 'enable'

        # The Screen keeps in FullHD (after a clone, for example) even when the
        # Primary output is set (BUG?). So, we need set the screen resolution with the
        # first index of Primary 
        xrandr -s 0
        ;;
esac


