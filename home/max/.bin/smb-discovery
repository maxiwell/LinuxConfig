#!/bin/bash

# Hi and welcome to this samba/windows share automounting script.
#
# It will:
# - Scan the network for windows/samba hosts.
# - Mount all their available guest shares
# - If rerun it will check if all shares are still accesible
# - Unmount everything if you use the -u option
#
# It will not:
# - Work on password protected shares. No idea what will happen,
#   I guess mount.cifs will spit an error but the script will continue
#
# Run it without options to mount/rescan, use -u to unmount everything.
#
# Before running it please specify the options below.
#
# Post questions on the Archlinux forum: http://bbs.archlinux.org/viewtopic.php?pid=596979#p596979
#
# MOST IMPORTANTLY: If it eats all your files for breakfast, it's none
# of my responsibility! It should be quite safe though because it's 
# always checking if a dir is empty before deleting it. 



### Options

# Specify the name of your network adapter (e.g. eth0):
INTERFACE='wlan0'
# Specify which range of IPs you're interested in (less is faster)
lowend=100
highend=200


LOCAL_DISCOVERY='/media/samba-discovery'
USER='zzz'

### Code

# Prepare samba-discovery folder
if [[ ! -d $LOCAL_DISCOVERY ]]; then
    mkdir $LOCAL_DISCOVERY
fi

# Unmount all shares and clean up directories using -u
umountcount=0
uhostcount=0
if [[ $1 == "-u" ]]; then
    shopt -s nullglob dotglob
    dirs=($LOCAL_DISCOVERY/*)
    (( ${#dirs[@]} )) || sharefolders=1
    shopt -u nullglob dotglob
    if [[ ! $sharefolders == 1 ]]; then
        for i in $LOCAL_DISCOVERY/*/*; do
            umount "$i" 2>/dev/null
            cd "$i" 2>/dev/null
            shopt -s nullglob dotglob
            files=(*)
            (( ${#files[*]} )) || dirempty=1
            shopt -u nullglob dotglob
            if [[ ! $dirempty == 1 ]]; then
                echo ">>> warning: target directory not empty although share unmounted"
                echo ">>> aborting. please investigate directory:"
                echo "    $i"
                exit 1
            else
                dirempty=0
                rm -R "$i"
                echo "  share on $i unmounted, folder removed."
                ((umountcount++))
            fi
        done
        for i in $LOCAL_DISCOVERY/*; do
            umount "$i" 2>/dev/null
            cd "$i" 2>/dev/null
            shopt -s nullglob dotglob
            files=(*)
            (( ${#files[*]} )) || dirempty=1
            shopt -u nullglob dotglob
            if [[ ! $dirempty == 1 ]]; then
                echo ">>> warning: target directory not empty although all shares unmounted"
                echo ">>> aborting. please investigate directory:"
                echo "    $i"
                exit 1
            else
                dirempty=0
                rm -R "$i"
                echo "  parent folder $i removed."
                ((uhostcount++))
            fi
        done
        echo "-> Removed $umountcount shares and $uhostcount parent folders" 
        exit 0
    else
        echo "no parent folder found, nothing to unmount"
        exit 0
    fi
fi

# Normal run. Scan for shares which are no longer on the network...
if [[ ! $1 == "" ]]; then
    echo "Invalid option. Aborted"
    exit 1
fi
shopt -s nullglob dotglob
dirs=($LOCAL_DISCOVERY/*)
(( ${#dirs[@]} )) || sharefolders=1
shopt -u nullglob dotglob
if [[ ! $sharefolders == 1 ]]; then
    echo ':: Cleaning up orphaned shares...'
    cleancount=0
    for i in $LOCAL_DISCOVERY/*/*; do 
        if [[ ! $(ls $i 2>/dev/null) ]]; then
            umount "$i" 2>/dev/null
            cd "$i" 2>/dev/null
            shopt -s nullglob dotglob
            files=(*)
            (( ${#files[*]} )) || dirempty=1
            shopt -u nullglob dotglob
            if [[ ! $dirempty == 1 ]]; then
                echo ">>> warning: target directory not empty although share unmounted"
                echo ">>> aborting. please investigate directory:"
                echo "    $i"
                exit 1
            else
                dirempty=0
                rm -R "$i"
                echo "  share on $i no longer accesible, removed."
                ((cleancount++))
            fi
        else
            if [[ ! $(cat /proc/mounts | grep "cifs" | awk '{print $2}' | grep $i) ]]; then
                cd "$i" 2>/dev/null
                shopt -s nullglob dotglob
                files=(*)
                (( ${#files[*]} )) || dirempty=1
                shopt -u nullglob dotglob
                if [[ ! $dirempty == 1 ]]; then
                    echo ">>> warning: target directory not empty although nothing mounted there"
                    echo ">>> aborting. please investigate directory:"
                    echo "    $i"
                    exit 1
                else
                    dirempty=0
                    rm -R "$i"
                    echo "  nothing mounted on $i, removed."
                    ((cleancount++))
                fi
            fi
        fi
    done
    echo "-> Cleaned out $cleancount shares" 
fi

# ... and then scan for new hosts and mount shares
echo ':: Scanning for new hosts and shares...'
netaddr=$(ifconfig $INTERFACE | grep "inet addr" | awk '{print $2}' | awk -F ":" '{print $2}' | awk -F "." '{print $1"."$2"."$3}')
hostcount=0
sharecount=0
for ((ip=$lowend; ip<=$highend; ip++)); do
    printf " scanning $netaddr.$ip...\r"
    if (( $(nmap -PN -p139,445 "$netaddr.$ip" | grep -e "139/tcp open" -e "445/tcp open" | wc -l) == 2 )); then
        hostwinname="$( nmblookup -A $netaddr.$ip | grep "<00>" | grep -v "<GROUP>" | awk '{print $1}')"
        hostdirname="$(echo $hostwinname | tr [:upper:] [:lower:])"
        echo " found $hostwinname on $netaddr.$ip"
        IFS=$'\n' shares=($(smbclient -N -gL \\\\$netaddr.$ip\\ 2>&1 | grep -e "Disk|" | grep -v '\$' | awk -F "|" '{print $2}'))
        for share in ${shares[*]}; do
            sharedir="$(echo $share | sed s/\ /_/g | tr [:upper:] [:lower:])"
            if [[ "$(cat /proc/mounts | grep ",unc=\\\\\\\\$netaddr.$ip\\\\$share,")" ]]; then
                echo "  share "$share" already mounted in $LOCAL_DISCOVERY/$hostdirname/$sharedir"
            else
                if [[ ! -d "$LOCAL_DISCOVERY/$hostdirname" ]]; then
                    mkdir "$LOCAL_DISCOVERY/$hostdirname"
                    #echo "$hostwinname:$hostdirname:$netaddr.$ip" >> $LOCAL_DISCOVERY/$hostdirname/ip.txt
                fi
                if [[ ! -d "$LOCAL_DISCOVERY/$hostdirname/$sharedir" ]]; then
                    mkdir "$LOCAL_DISCOVERY/$hostdirname/$sharedir"
                else
                    cd "$LOCAL_DISCOVERY/$hostdirname/$sharedir"
                    shopt -s nullglob dotglob
                    files=(*)
                    (( ${#files[*]} )) || dirempty=1
                    shopt -u nullglob dotglob
                    if [[ ! $dirempty == 1 ]]; then
                        echo ">>> warning: mounting directory not empty although share not mounted!"
                        echo ">>> aborting. please investigate directory:"
                        echo "    $LOCAL_DISCOVERY/$hostdirname/$sharedir"
                        exit 1
                    fi
                    dirempty=0
                fi
                mount "//192.168.1.$ip/$share" "$LOCAL_DISCOVERY/$hostdirname/$sharedir" -o user=$USER 2>/dev/null
                echo "  mounted "$share" in $LOCAL_DISCOVERY/$hostdirname/$sharedir"
                ((sharecount++))
            fi
        done
        ((hostcount++))
    fi
done
echo "-> Mounted $sharecount shares from $hostcount hosts."

# Remove samba-discovery folder if it is empty
if [[ -d $LOCAL_DISCOVERY/ ]]; then
    cd "$LOCAL_DISCOVERY/"
    shopt -s nullglob dotglob
    files=(*)
    (( ${#files[*]} )) || sambadirempty=1
    shopt -u nullglob dotglob
    if [[ sambadirempty == 1 ]]; then
        rm -R $LOCAL_DISCOVERY/
    fi
fi
